// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "${rootProject.projectDir.path}${File.separatorChar}gradle${File.separatorChar}detekt${File.separatorChar}detekt.gradle"

buildscript {
    ext {
        compileSdkVersion = 28
        minSdkVersion = 23
        targetSdkVersion = 28

        appcompatVersion = '1.1.0-beta01'
        constraintLayoutVersion = '2.0.0-beta1'
        coroutinesVersion = '1.2.1'
        daggerVersion = '2.23.2'
        detektVersion = '1.0.0-RC15'
        exoplayerVersion = '2.10.2'
        glideVersion = '4.9.0'
        gradleVersion = '3.5.0-beta05'
        junitVersion = '4.13-beta-3'
        jodaTimeVersion = '2.10.1'
        kotlinVersion = '1.3.40'
        ktxVersion = '1.2.0-alpha02'
        lifecycleVersion = '2.2.0-alpha01'
        materialVersion = '1.1.0-alpha07'
        mockitoVersion = '2.23.4'
        navigationVersion = '2.1.0-alpha05'
        retrofitVersion = '2.6.0'
        robolectricVersion = '4.3'
        roomVersion = '2.1.0'
        timberVersion = '4.7.1'
        workVersion = '2.1.0-beta02'

        appcompat = "androidx.appcompat:appcompat:$appcompatVersion"
        constraintLayout = "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
        coroutines = [
                core : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion",
                android : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
        ]
        dagger = [
                compiler: "com.google.dagger:dagger-compiler:$daggerVersion",
                dagger        : "com.google.dagger:dagger:$daggerVersion"
        ]
        exoplayer = [
                core: "com.google.android.exoplayer:exoplayer-core:$exoplayerVersion",
                ui  : "com.google.android.exoplayer:exoplayer-ui:$exoplayerVersion"
        ]
        glide = [
                glide   : "com.github.bumptech.glide:glide:$glideVersion",
                compiler: "com.github.bumptech.glide:compiler:$glideVersion"
        ]
        junit = "junit:junit:$junitVersion"
        jodaTime = "joda-time:joda-time:$jodaTimeVersion"
        kotlinSdk = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
        ktx =  "androidx.core:core-ktx:$ktxVersion"
        lifecycle = [
                extensions : "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion",
                livedataktx : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion",
                viewmodelktx : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion",
                compiler :"androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"
        ]
        material =  "com.google.android.material:material:$materialVersion"
        mockito = "org.mockito:mockito-core:$mockitoVersion"
        navigation = [
                fragment : "androidx.navigation:navigation-fragment-ktx:$navigationVersion",
                ui : "androidx.navigation:navigation-ui-ktx:$navigationVersion"
        ]
        retrofit = [
                retrofit : "com.squareup.retrofit2:retrofit:$retrofitVersion",
                gsonConverter : "com.squareup.retrofit2:converter-gson:$retrofitVersion"
        ]
        robolectric = "org.robolectric:robolectric:$robolectricVersion"
        room = [
                room :  "androidx.room:room-runtime:$roomVersion",
                compiler: "androidx.room:room-compiler:$roomVersion"
        ]
        timber = "com.jakewharton.timber:timber:$timberVersion"
        workmanager = "androidx.work:work-runtime-ktx:$workVersion"
    }
    repositories {
        google()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${gradleVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigationVersion"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detektVersion"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
